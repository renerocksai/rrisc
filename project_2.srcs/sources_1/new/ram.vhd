----------------------------------------------------------------------------------
--
-- Engineer: Rene Schallner
-- 
-- Create Date: 12/29/2020 
-- Description: 
-- 
----------------------------------------------------------------------------------


library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;

-- debug stuff
use work.debug.ALL;


entity ram is
    port(
    -- reset and clock
    rst         :   IN    std_logic;    -- RESET
    clk         :   IN    std_logic;    -- clock

    ram_ld_val  :   IN   std_logic_vector (7 downto 0);
    write       :   IN   std_logic;
    addr        :   IN   std_logic_vector (15 downto 0);
    ram_out     :   OUT  std_logic_vector (7 downto 0)
);
end ram;

architecture Behavioral of ram is
    type ram_mem_t is array (0 to 1023) of std_logic_vector (7 downto 0);

    -- signals",
    signal mem :ram_mem_t := (

        "00001010", "00000000", "00000000", "00001101", "11111010", "11111111", "00010100", "11111000", 
        "11111111", "00010101", "11111100", "11111111", "00010010", "00000001", "00000000", "00010101", 
        "11111101", "11111111", "00010010", "00000111", "00000000", "00010101", "11111110", "11111111", 
        "00010100", "11111111", "11111111", "01000010", "00000110", "00000000", "00001010", "00000001", 
        "00000000", "00001101", "11111010", "11111111", "00001101", "11111100", "11111111", "00010010", 
        "00000100", "00000000", "00010101", "11111110", "11111111", "00001100", "11111111", "11111111", 
        "00110010", "11001010", "00000000", "00101010", "00000001", "00000000", "00100010", "11011010", 
        "00000000", "00011010", "00010000", "00000000", "00100101", "11111100", "11111111", "00111010", 
        "00001101", "00000000", "00111101", "11111110", "11111111", "00100100", "11111111", "11111111", 
        "01000010", "01001110", "00000000", "00000010", "00111100", "00000000", "00011101", "11111100", 
        "11111111", "00011100", "11111111", "11111111", "01000010", "01011010", "00000000", "00000010", 
        "00111100", "00000000", "00110101", "11111100", "11111111", "00110100", "11111111", "11111111", 
        "01000010", "01100110", "00000000", "00000010", "00110110", "00000000", "00101101", "11111100", 
        "11111111", "00101100", "11111111", "11111111", "01000010", "01110010", "00000000", "00000010", 
        "00110110", "00000000", "00001101", "11111010", "11111111", "00001101", "11111100", "11111111", 
        "00010010", "00000100", "00000000", "00010101", "11111110", "11111111", "00001100", "11111111", 
        "11111111", "00110010", "11001010", "00000000", "00101010", "00000001", "00000000", "00100010", 
        "11011010", "00000000", "00011010", "00010000", "00000000", "00100101", "11111100", "11111111", 
        "00111010", "00001101", "00000000", "00111101", "11111110", "11111111", "00100100", "11111111", 
        "11111111", "01000010", "10011111", "00000000", "00000010", "10001101", "00000000", "00011101", 
        "11111100", "11111111", "00011100", "11111111", "11111111", "01000010", "10101011", "00000000", 
        "00000010", "10001101", "00000000", "00110101", "11111100", "11111111", "00110100", "11111111", 
        "11111111", "01000010", "10110111", "00000000", "00000010", "10000111", "00000000", "00101101", 
        "11111100", "11111111", "00101100", "11111111", "11111111", "01000010", "11000011", "00000000", 
        "00000010", "10000111", "00000000", "00001101", "11111010", "11111111", "00001101", "11111100", 
        "11111111", "00010010", "00000100", "00000000", "00010101", "11111110", "11111111", "00001100", 
        "11111111", "11111111", "00110010", "11001010", "00000000", "00101010", "00000001", "00000000", 
        "00100010", "11011010", "00000000", "00011010", "00010000", "00000000", "00100101", "11111100", 
        "11111111", "00111010", "00001101", "00000000", "00111101", "11111110", "11111111", "00100100", 
        "11111111", "11111111", "01000010", "11110000", "00000000", "00000010", "11011110", "00000000", 
        "00011101", "11111100", "11111111", "00011100", "11111111", "11111111", "01000010", "11111100", 
        "00000000", "00000010", "11011110", "00000000", "00110101", "11111100", "11111111", "00110100", 
        "11111111", "11111111", "01000010", "00001000", "00000001", "00000010", "11011000", "00000000", 
        "00101101", "11111100", "11111111", "00101100", "11111111", "11111111", "01000010", "00010100", 
        "00000001", "00000010", "11011000", "00000000", "00001101", "11111010", "11111111", "00001101", 
        "11111100", "11111111", "00010010", "00000100", "00000000", "00010101", "11111110", "11111111", 
        "00001100", "11111111", "11111111", "00110010", "11001010", "00000000", "00101010", "00000001", 
        "00000000", "00100010", "11011010", "00000000", "00011010", "00010000", "00000000", "00100101", 
        "11111100", "11111111", "00111010", "00001101", "00000000", "00111101", "11111110", "11111111", 
        "00100100", "11111111", "11111111", "01000010", "01000001", "00000001", "00000010", "00101111", 
        "00000001", "00011101", "11111100", "11111111", "00011100", "11111111", "11111111", "01000010", 
        "01001101", "00000001", "00000010", "00101111", "00000001", "00110101", "11111100", "11111111", 
        "00110100", "11111111", "11111111", "01000010", "01011001", "00000001", "00000010", "00101001", 
        "00000001", "00101101", "11111100", "11111111", "00101100", "11111111", "11111111", "01000010", 
        "01100101", "00000001", "00000010", "00101001", "00000001", "00001101", "11111010", "11111111", 
        "00001101", "11111100", "11111111", "00010010", "00000101", "00000000", "00010101", "11111110", 
        "11111111", "00001100", "11111111", "11111111", "00001101", "11111010", "11111111", "00001101", 
        "11111100", "11111111", "00010010", "00000101", "00000000", "00010101", "11111110", "11111111", 
        "00001100", "11111111", "11111111", "00001101", "11111010", "11111111", "00001101", "11111100", 
        "11111111", "00010010", "00000101", "00000000", "00010101", "11111110", "11111111", "00001100", 
        "11111111", "11111111", "00110010", "11001010", "00000000", "00101010", "00000001", "00000000", 
        "00100010", "11011010", "00000000", "00011010", "00010000", "00000000", "00100101", "11111100", 
        "11111111", "00111010", "00001101", "00000000", "00111101", "11111110", "11111111", "00100100", 
        "11111111", "11111111", "01000010", "10110000", "00000001", "00000010", "10011110", "00000001", 
        "00011101", "11111100", "11111111", "00011100", "11111111", "11111111", "01000010", "10111100", 
        "00000001", "00000010", "10011110", "00000001", "00110101", "11111100", "11111111", "00110100", 
        "11111111", "11111111", "01000010", "11001000", "00000001", "00000010", "10011000", "00000001", 
        "00101101", "11111100", "11111111", "00101100", "11111111", "11111111", "01000010", "11010100", 
        "00000001", "00000010", "10011000", "00000001", "00001101", "11111010", "11111111", "00001101", 
        "11111100", "11111111", "00010010", "00000101", "00000000", "00010101", "11111110", "11111111", 
        "00001100", "11111111", "11111111", "00110010", "11001010", "00000000", "00101010", "00000001", 
        "00000000", "00100010", "11011010", "00000000", "00011010", "00010000", "00000000", "00100101", 
        "11111100", "11111111", "00111010", "00001101", "00000000", "00111101", "11111110", "11111111", 
        "00100100", "11111111", "11111111", "01000010", "00000001", "00000010", "00000010", "11101111", 
        "00000001", "00011101", "11111100", "11111111", "00011100", "11111111", "11111111", "01000010", 
        "00001101", "00000010", "00000010", "11101111", "00000001", "00110101", "11111100", "11111111", 
        "00110100", "11111111", "11111111", "01000010", "00011001", "00000010", "00000010", "11101001", 
        "00000001", "00101101", "11111100", "11111111", "00101100", "11111111", "11111111", "01000010", 
        "00100101", "00000010", "00000010", "11101001", "00000001", "00001101", "11111010", "11111111", 
        "00001101", "11111100", "11111111", "00010010", "00000101", "00000000", "00010101", "11111110", 
        "11111111", "00001100", "11111111", "11111111", "00000010", "00000110", "00000000",



        -- filler
                                                                                            "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000",
        "11001101", "00000010", "00000010", "10010001", "00000010", "00000010", "00000000", "00000000"

    );
    signal myval : std_logic_vector (7 downto 0) := "11111111";
    constant zero : std_logic_vector(7 downto 0) := "00000000";

begin
    ramproc : process (rst, clk)
    begin
        if rst = '1' then
            myval <= zero;
        elsif rising_edge(clk) then
            if write = '1' then
                mem(to_integer(unsigned(addr(9 downto 0)))) <= ram_ld_val;
                myval <= ram_ld_val;
                report "> ram " & integer'image(to_integer(unsigned(addr(9 downto 0)))) & " : " & integer'image(to_integer(unsigned(ram_ld_val))) ;
            else
                report "< ram addr " & integer'image(to_integer(unsigned(addr(9 downto 0)))) ;
                report "< ram " & integer'image(to_integer(unsigned(addr(9 downto 0))))  & " : " & integer'image(to_integer(unsigned(mem(to_integer(unsigned(addr(9 downto 0))))))) ;
                myval <= mem(to_integer(unsigned(addr(9 downto 0))));
            end if;
        end if;
    end process ramproc;

    -- concurrent stuff
    ram_out <= myval;

    -- debug
    debug_mem(0) <= mem(0);
    debug_mem(1) <= mem(1);
    debug_mem(2) <= mem(2);
    debug_mem(3) <= mem(3);
    debug_mem(4) <= mem(4);
    debug_mem(5) <= mem(5);
    debug_mem(6) <= mem(6);
    debug_mem(7) <= mem(7);
    debug_mem(8) <= mem(8);
    debug_mem(9) <= mem(9);
    debug_mem(10) <= mem(10);
    debug_mem(11) <= mem(11);
    debug_mem(12) <= mem(12);
    debug_mem(13) <= mem(13);
    debug_mem(14) <= mem(14);
    debug_mem(15) <= mem(15);
    debug_mem(16) <= mem(16);
    debug_mem(17) <= mem(17);
    debug_mem(18) <= mem(18);
    debug_mem(19) <= mem(19);
    debug_mem(20) <= mem(20);
    debug_mem(21) <= mem(21);
    debug_mem(22) <= mem(22);
    debug_mem(23) <= mem(23);
    debug_mem(24) <= mem(24);
    debug_mem(25) <= mem(25);
    debug_mem(26) <= mem(26);
    debug_mem(27) <= mem(27);
    debug_mem(27) <= mem(27);
    debug_mem(28) <= mem(28);
    debug_mem(29) <= mem(29);
    debug_mem(30) <= mem(30);
    debug_mem(31) <= mem(31);
end Behavioral;


